<?php
/**
 * PHP version 5.
 *
 * Copyright (c) Samurai Framework Project, All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *
 *     * Redistributions of source code must retain the above copyright notice,
 *       this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright notice,
 *       this list of conditions and the following disclaimer in the documentation
 *       and/or other materials provided with the distribution.
 *     * Neither the name of the Samurai Framework Project nor the names of its
 *       contributors may be used to endorse or promote products derived from this
 *       software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
 * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * @package     Samurai
 * @copyright   Samurai Framework Project
 * @link        http://samurai-fw.org/
 * @license     http://www.opensource.org/licenses/bsd-license.php The BSD License
 */

/**
 * task: database: schema: dump
 * 
 * @package     Samurai
 * @subpackage  Task.Database
 * @copyright   Samurai Framework Project
 * @author      KIUCHI Satoshinosuke <scholar@hayabusa-lab.jp>
 * @license     http://www.opensource.org/licenses/bsd-license.php The BSD License
 */
class Samurai_Task_Database_Schema_Dump extends Samurai_Task
{
    /**
     * aliases
     *
     * @access  private
     * @var     array
     */
    private $_aliases = array();

    /**
     * schemas
     *
     * @access  private
     * @var     array
     */
    private $_schemas = array();

    /**
     * @dependencies
     */
    public $FileScanner;


    /**
     * constructor.
     *
     * @access     public
     */
    public function __construct()
    {
        parent::__construct();
    }
    
    
    
    
    
    /**
     * prepare.
     *
     * @implements
     */
    public function prepare()
    {
        // get aliases
        $aliases = ActiveGateway::getManager()->getAliases();
        $this->_aliases = $aliases;
    }


    /**
     * execute.
     *
     * @implements
     */
    public function execute()
    {
        foreach ( $this->_aliases as $alias ) {
            $this->flushMessage(sprintf('-- dump database schema. [%s]', $alias));

            $this->_dump($alias);

            $this->flushMessage('   -> dumped.');
        }
    }


    /**
     * dump schema.
     *
     * @access  private
     * @param   string  $alias
     */
    private function _dump($alias)
    {
        // get a version.
        $version = $this->_getVersion($alias);

        // get a tables.
        $defines = $this->_getTableDefines($alias);

        $codes = array();
        $codes[] = '<?php';
        $codes[] = '/**';
        $codes[] = ' * encoding: utf-8';
        $codes[] = ' * ';
        $codes[] = ' * this file is auto generated by db-schema-dump (or others) command.';
        $codes[] = ' */';
        $codes[] = '';
        $codes[] = 'class Db_Schema_' . ucfirst($alias) . ' extends ActiveGateway_Schema';
        $codes[] = '{';
        $codes[] = '    public function define($version = ' . $version . ')';
        $codes[] = '    {';
        $codes[] = '';
        $codes[] = '        $this->setVersion($version);';
        foreach ( $defines as $define ) {
            if ( $define instanceof ActiveGateway_Schema_Table ) {
                $codes[] = '';
            }
            $codes[] = '        ' . join("\n        ", explode("\n", $define->toCode()));
            if ( $define instanceof ActiveGateway_Schema_Table ) {
                $codes[] = '';
            }
        }
        $codes[] = '    }';
        $codes[] = '}';
        $code = join("\n", $codes);

        $path = Samurai_Config::get('generator.directory.samurai') . '/db/schema/' . $alias . '.php';
        file_put_contents($path, $code);
    }


    /**
     * get version.
     *
     * @access  private
     * @param   string  $alias
     * @return  int
     */
    private function _getVersion($alias)
    {
        try {
            $AG = ActiveGateway::getManager()->get($alias);
            $version = $AG->getOne('SELECT MAX(version) FROM ' . ActiveGateway_Schema::TABLE_SCHEMA_MIGRATIONS);
        } catch (ActiveGateway_Exception $E) {
            $version = 0;
        }
        return $version;
    }


    /**
     * get table defines
     *
     * @access  private
     * @param   string  $alias
     * @return  array
     */
    private function _getTableDefines($alias)
    {
        $AG = ActiveGateway::getManager()->get($alias);
        $helper = $AG->getHelper();

        $defines = array();
        $tables = $helper->getTables($AG);
        foreach ( $tables as $table ) {
            if ( $table === ActiveGateway_Schema::TABLE_SCHEMA_MIGRATIONS ) continue;
            $defines = array_merge($defines, $helper->getDefinesByTableName($AG, $table));
        }

        return $defines;
    }





    /**
     * get schema file path.
     *
     * @access  public
     * @return  string
     */
    public function getSchemaFiles()
    {
        $dir = Samurai_Loader::getPath('db/schema', true);
        $cond = $this->FileScanner->getCondition();
        $cond->setExtension('php');
        $files = $this->FileScanner->scan($dir, $cond);
        return $files;
    }
}

